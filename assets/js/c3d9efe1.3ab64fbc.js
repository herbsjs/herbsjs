"use strict";(self.webpackChunkherbjs_website=self.webpackChunkherbjs_website||[]).push([[9775],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},s=Object.keys(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,s=e.originalType,l=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),d=c(n),m=a,h=d["".concat(l,".").concat(m)]||d[m]||p[m]||s;return n?r.createElement(h,i(i({ref:t},u),{},{components:n})):r.createElement(h,i({ref:t},u))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var s=n.length,i=new Array(s);i[0]=d;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o.mdxType="string"==typeof e?e:a,i[1]=o;for(var c=2;c<s;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},67379:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>p,frontMatter:()=>s,metadata:()=>o,toc:()=>c});var r=n(87462),a=(n(67294),n(3905));const s={id:"gettingStarted",title:"Getting Started with Use Cases",sidebar_label:"Getting Started",slug:"/usecase/getting-started"},i=void 0,o={unversionedId:"usecase/gettingStarted",id:"usecase/gettingStarted",title:"Getting Started with Use Cases",description:"What's a Use Case?",source:"@site/docs/usecase/getting-started.md",sourceDirName:"usecase",slug:"/usecase/getting-started",permalink:"/docs/usecase/getting-started",draft:!1,editUrl:"https://github.com/herbsjs/herbsjs.github.io/blob/master/docs/usecase/getting-started.md",tags:[],version:"current",frontMatter:{id:"gettingStarted",title:"Getting Started with Use Cases",sidebar_label:"Getting Started",slug:"/usecase/getting-started"},sidebar:"sidebar",previous:{title:"License",permalink:"/docs/project/license"},next:{title:"Features",permalink:"/docs/usecase/features"}},l={},c=[{value:"What&#39;s a Use Case?",id:"whats-a-use-case",level:2},{value:"Installing",id:"installing",level:2},{value:"Using",id:"using",level:2},{value:"Best Pratices for a Use Case",id:"best-pratices-for-a-use-case",level:2},{value:"Running",id:"running",level:2}],u={toc:c};function p(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"whats-a-use-case"},"What's a Use Case?"),(0,a.kt)("p",null,"A use case is action that a user can perform in the domain."),(0,a.kt)("p",null,"For exemple: ",(0,a.kt)("em",{parentName:"p"},"Reopen Ticket"),", ",(0,a.kt)("em",{parentName:"p"},"Reply Message"),", ",(0,a.kt)("em",{parentName:"p"},"Add Product")),(0,a.kt)("p",null,"Internally, a use case is responsible for controlling the interaction between entities, repositories and other domain components."),(0,a.kt)("p",null,'From Clean Architecture book: "Use cases orchestrate the flow of data to and from the entities, and direct those entities to use their Critical Business Rules to achieve the goals of the use case." '),(0,a.kt)("h2",{id:"installing"},"Installing"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"$ npm install @herbsjs/herbs\n")),(0,a.kt)("h2",{id:"using"},"Using"),(0,a.kt)("p",null,"This is an example of how to set up a use case for creating a list (entity):"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"usecases/list/createList.js"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"const { usecase, step, Ok, Err } = require('@herbsjs/herbs')\nconst { TodoList } = require('../entities/todoList')\nconst dependency = {}\n\nmodule.exports.createList = injection =>\n  usecase('Create List', {\n    // Input/Request metadata and validation \n    request: { name: String },\n\n    // Output/Response metadata\n    response: TodoList,\n\n    // Pre-run setup\n    setup: ctx => (ctx.di = Object.assign({}, dependency, injection)),\n\n    // Authorization with Audit\n    authorize: async (user) => (user.canCreateList ? Ok() : Err()),\n\n    // Step description and function\n    'Check if the List is valid': step(ctx => {\n      const list = ctx.list = new TodoList()\n      list.id = Math.floor(Math.random() * 100000)\n      list.name = ctx.req.name\n\n      if (!list.isValid()) return Err(list.errors)\n      return Ok() // returning Ok continues to the next step. Err stops the use case execution.\n    }),\n\n    'Save the List': step(async ctx => {\n      const repo = new ctx.di.ListRepository(injection)\n      return (ctx.ret = await repo.insert(ctx.list)) // ctx.ret is the Use Case return\n    }),\n  })\n")),(0,a.kt)("h2",{id:"best-pratices-for-a-use-case"},"Best Pratices for a Use Case"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Be modeled around business domain"),(0,a.kt)("li",{parentName:"ul"},"Focused on value"),(0,a.kt)("li",{parentName:"ul"},"Keep it simple by telling stories / flows (",(0,a.kt)("a",{parentName:"li",href:"/docs/usecase/steps"},"steps"),")"),(0,a.kt)("li",{parentName:"ul"},"Be reusable"),(0,a.kt)("li",{parentName:"ul"},"Be ",(0,a.kt)("a",{parentName:"li",href:"/docs/specs/getting-started"},"testable")),(0,a.kt)("li",{parentName:"ul"},"Have clear ",(0,a.kt)("a",{parentName:"li",href:"/docs/specs/getting-started"},"acceptance criteria")),(0,a.kt)("li",{parentName:"ul"},"Use Ubiquitous language"),(0,a.kt)("li",{parentName:"ul"},"Avoid implement field ",(0,a.kt)("strong",{parentName:"li"},"validations")," using use cases. Prefer Entities for that."),(0,a.kt)("li",{parentName:"ul"},"Enforce that use cases are the only entry point to your Domain")),(0,a.kt)("h2",{id:"running"},"Running"),(0,a.kt)("p",null,"Use cases are likely to be called and audited indirectly by a ",(0,a.kt)("a",{parentName:"p",href:"/docs/glues"},"Glue"),". But for didactic purposes or advanced scenarios, this is how to run and audit a use case:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Check if the user has authorization to run this use case")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"/* Authorization */\nconst hasAccess = await usecase.authorize(user)\nif (hasAccess === false) {\n    console.info(usecase.auditTrail)\n    throw new ForbiddenError() // Or any other behavior for a unauthorized user\n}\n")),(0,a.kt)("ol",{start:2},(0,a.kt)("li",{parentName:"ol"},"Prepare your request object and call the ",(0,a.kt)("inlineCode",{parentName:"li"},".run()")," function.")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"\n/* Execution */\nconst request = { name: 'The best list' }\nconst response = await usecase.run(request)\n\n")),(0,a.kt)("ol",{start:3},(0,a.kt)("li",{parentName:"ol"},"Audit the execution ")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"\n/* Audit */\nconsole.info(usecase.auditTrail)\n/*\n{\n    type: 'use case',\n    description: 'Create List',\n    authorized: true,\n    steps: (2) [{\u2026}, {\u2026}],\n    transactionId: '2bbc60d6-7843-4667-8732-341c22bae42e',\n    elapsedTime: 172811500n,\n    request: { name: 'The best list' },\n    return: {Ok: {\u2026}},\n    user: { canCreateList: true }\n}\n*/\n\n")),(0,a.kt)("ol",{start:4},(0,a.kt)("li",{parentName:"ol"},"Check if the use case execution returned an error or success")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"\n/* Response */\nif (response.isErr)\n    throw new ResponseError(null, { invalidArgs: response.err }) \n    // Or any other behavior for error response\nreturn response.ok // response.ok has the returned value\n")))}p.isMDXComponent=!0}}]);