"use strict";(self.webpackChunkherbjs_website=self.webpackChunkherbjs_website||[]).push([[53],{1109:function(e){e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"sidebar":[{"type":"category","label":"Introduction","items":[{"type":"link","label":"Getting Started","href":"/docs/","docId":"introduction/getting-started"},{"type":"link","label":"Why Herbs?","href":"/docs/introduction/why-herbs","docId":"introduction/herbsjs"}],"collapsed":true,"collapsible":true},{"type":"category","label":"Tutorial","items":[{"type":"link","label":"1. New Project","href":"/docs/tutorial/new-project","docId":"tutorial/new-project"},{"type":"link","label":"2. Creating Entities","href":"/docs/tutorial/create-entity","docId":"tutorial/create-entity"},{"type":"link","label":"3. Generating Repositories","href":"/docs/tutorial/repository","docId":"tutorial/repository"},{"type":"link","label":"4. Creating Use Cases","href":"/docs/tutorial/create-usecase","docId":"tutorial/create-usecase"},{"type":"link","label":"5. Generating GraphQL Endpoint","href":"/docs/tutorial/graphql","docId":"tutorial/graphql"},{"type":"link","label":"6. Generating Herbs Shelf","href":"/docs/tutorial/herbsshelf","docId":"tutorial/herbsshelf"},{"type":"link","label":"7. Refactoring","href":"/docs/tutorial/refactoring","docId":"tutorial/refactoring"},{"type":"link","label":"8. Security and Auditing","href":"/docs/tutorial/security","docId":"tutorial/security"}],"collapsed":true,"collapsible":true},{"type":"category","label":"Project","items":[{"type":"link","label":"Motivation","href":"/docs/project/motivation","docId":"project/motivation"},{"type":"link","label":"Architecture guidelines","href":"/docs/project/architecture-guidelines","docId":"project/architecture"},{"type":"link","label":"The Herbs Ecosystem","href":"/docs/project/ecosystem","docId":"project/ecosystem"},{"type":"link","label":"Roadmap","href":"/docs/project/Roadmap","docId":"project/roadmap"},{"type":"link","label":"How to contribute","href":"/docs/project/contributing","docId":"project/contributing"},{"type":"link","label":"Acknowledgements","href":"/docs/project/acknowledgements","docId":"project/acknowledgements"},{"type":"link","label":"Logo assets","href":"/docs/project/logos","docId":"project/logos"},{"type":"link","label":"Code of Conduct","href":"/docs/project/CoC","docId":"project/CoC"},{"type":"link","label":"License","href":"/docs/project/license","docId":"project/license"}],"collapsed":true,"collapsible":true},{"type":"category","label":"UseCase","items":[{"type":"link","label":"Getting Started","href":"/docs/usecase/getting-started","docId":"usecase/gettingStarted"},{"type":"link","label":"Features","href":"/docs/usecase/features","docId":"usecase/features"},{"type":"link","label":"Steps","href":"/docs/usecase/steps","docId":"usecase/steps"},{"type":"link","label":"Result","href":"/docs/usecase/result","docId":"usecase/result"}],"collapsed":true,"collapsible":true},{"type":"category","label":"Entity","items":[{"type":"link","label":"Getting Started","href":"/docs/entity/getting-started","docId":"entity/gettingStarted"},{"type":"link","label":"Features","href":"/docs/entity/features","docId":"entity/features"},{"type":"link","label":"Validations","href":"/docs/entity/validation","docId":"entity/validation"}],"collapsed":true,"collapsible":true},{"type":"category","label":"Specs","items":[{"type":"link","label":"Getting Started","href":"/docs/specs/getting-started","docId":"specs/gettingStarted"},{"type":"link","label":"Features","href":"/docs/specs/features","docId":"specs/features"}],"collapsed":true,"collapsible":true},{"type":"category","label":"Validation","items":[{"type":"link","label":"Getting Started","href":"/docs/validation/getting-started","docId":"validation/what-suma"},{"type":"link","label":"Validations","href":"/docs/validation/validations","docId":"validation/validations"},{"type":"link","label":"Checkers","href":"/docs/validation/checkers","docId":"validation/checkers"}],"collapsed":true,"collapsible":true},{"type":"category","label":"Glues","items":[{"type":"link","label":"What\'s glues","href":"/docs/glues","docId":"glues/whatisglue"},{"type":"link","label":"Herbs Shelf","href":"/docs/glues/herbsshelf","docId":"glues/herbsshelf"},{"type":"link","label":"GraphQL","href":"/docs/glues/herbs2gql","docId":"glues/herbs2gql"},{"type":"link","label":"REST","href":"/docs/glues/herbs2rest","docId":"glues/herbs2rest"},{"type":"link","label":"Knex","href":"/docs/glues/Herbs2knex","docId":"glues/herbs2knex"},{"type":"link","label":"Mongo","href":"/docs/glues/Herbs2mongo","docId":"glues/herbs2mongo"},{"type":"link","label":"REPL","href":"/docs/glues/herbs2repl","docId":"glues/herbs2repl"},{"type":"link","label":"Error to Text","href":"/docs/glues/suma2text","docId":"glues/suma2text"},{"type":"link","label":"Code Snippets","href":"/docs/glues/herbs-snippets","docId":"glues/herbs-snippets"}],"collapsed":true,"collapsible":true},{"type":"category","label":"Herbarium","items":[{"type":"link","label":"Working with Herbarium","href":"/docs/herbarium/working-with-herbarium","docId":"herbarium/working-with-herbarium"}],"collapsed":true,"collapsible":true}]},"docs":{"entity/features":{"id":"entity/features","title":"Entity Features","description":"Creating an Entity","sidebar":"sidebar"},"entity/gettingStarted":{"id":"entity/gettingStarted","title":"Getting Started with Entities","description":"What\'s an Entity?","sidebar":"sidebar"},"entity/validation":{"id":"entity/validation","title":"Validations","description":"The values of an entity fields can be validated against the fields types or values validations.","sidebar":"sidebar"},"glues/herbs-snippets":{"id":"glues/herbs-snippets","title":"Code Snippets","description":"This extension for Visual Studio Code adds snippets for HerbsJS.","sidebar":"sidebar"},"glues/herbs2gql":{"id":"glues/herbs2gql","title":"GraphQL - Herbs2GQL","description":"Creates GraphQL types (queries, mutations, etc.) based on herbs entities and usecases, based on Apollo GraphQL.","sidebar":"sidebar"},"glues/herbs2knex":{"id":"glues/herbs2knex","title":"Knex - Herbs2Knex","description":"Creates repositories to retrieve and store Entities using Knex, a relational database query builder for Node.js.","sidebar":"sidebar"},"glues/herbs2mongo":{"id":"glues/herbs2mongo","title":"Mongo - Herbs2mongo","description":"[BETA]","sidebar":"sidebar"},"glues/herbs2repl":{"id":"glues/herbs2repl","title":"REPL - Herbs2REPL","description":"Creates a REPL (Read Evaluate Print Loop) based on Herbs entities and usecases.","sidebar":"sidebar"},"glues/herbs2rest":{"id":"glues/herbs2rest","title":"REST - Herbs2REST","description":"Creates REST endpoints based on Herbs entities and use cases.","sidebar":"sidebar"},"glues/herbsshelf":{"id":"glues/herbsshelf","title":"Herbs Shelf","description":"Herbs Shelf is a self-generated documentation based on use cases and entities from your domain.","sidebar":"sidebar"},"glues/suma2text":{"id":"glues/suma2text","title":"Error to Text - Suma2Text","description":"CI build codecov","sidebar":"sidebar"},"glues/whatisglue":{"id":"glues/whatisglue","title":"Glues","description":"Glues","sidebar":"sidebar"},"herbarium/working-with-herbarium":{"id":"herbarium/working-with-herbarium","title":"Working with Herbarium","description":"Herbarium","sidebar":"sidebar"},"introduction/getting-started":{"id":"introduction/getting-started","title":"Getting Started with Herbs","description":"Herbs is an open source library for backend applications, allowing you to build your microservices in Node.js faster and future-proof. It is focused on achieving faster deliveries and with happier developers, without neglecting the long-term need to constantly evolve your application as requirements change.","sidebar":"sidebar"},"introduction/herbsjs":{"id":"introduction/herbsjs","title":"Why Herbs?","description":"While most of the current ecosystem is focused, for example, on who has the best HTML rendering time, which is a legitimate issue, we understand that some fundamental issues are not being addressed.","sidebar":"sidebar"},"project/acknowledgements":{"id":"project/acknowledgements","title":"Acknowledgements","description":"Herbs was born from the desire to innovate and transform the way we write software. A software with quality, purpose and agregatte value to the business.","sidebar":"sidebar"},"project/architecture":{"id":"project/architecture","title":"Architecture guides","description":"Herbs is an evolutionary and open source library, so we would love to see you contribute to it, making the library our best working tool. So we created some architectural guides that define Herbs to help you when it comes to consuming and contributing to the project:","sidebar":"sidebar"},"project/CoC":{"id":"project/CoC","title":"Contributor Covenant Code of Conduct","description":"Our Pledge","sidebar":"sidebar"},"project/contributing":{"id":"project/contributing","title":"How to contribute","description":"Glad you are here! Pull requests, or feature requests, though not always implemented, are a great way to help make Herbs even better than it is now. If you\'re looking for something specific to help out with, there\'s a number of unit tests that aren\'t implemented yet, the library could never have too many of those.","sidebar":"sidebar"},"project/ecosystem":{"id":"project/ecosystem","title":"The Herbs Ecosystem","description":"There are three primitive herbs libraries that are at Herbs\' core, helping modeling your domain and preparing it to expose metadata. To consume these metadata and bring value to your domain there are glue libraries. They create bridges between Herbs core and other libraries already consolidated in the Node.js community.","sidebar":"sidebar"},"project/license":{"id":"project/license","title":"How is Herbs licensed?","description":"Herbs was released as open source software by V\xf3rtx and is licensed under MIT License since 2019","sidebar":"sidebar"},"project/logos":{"id":"project/logos","title":"Logos","description":"Guidelines for how to use the Backstage logos and icons","sidebar":"sidebar"},"project/motivation":{"id":"project/motivation","title":"Motivation","description":"The goal of software development has always been to have happy customers through amazing features, working accurately and delivered as quickly as possible. We know that impose clear challenges for developers.","sidebar":"sidebar"},"project/roadmap":{"id":"project/roadmap","title":"Herbs Roadmap","description":"Vision","sidebar":"sidebar"},"specs/features":{"id":"specs/features","title":"Spec Features","description":"Basic Spec","sidebar":"sidebar"},"specs/gettingStarted":{"id":"specs/gettingStarted","title":"Getting Started with Specs","description":"What\'s a Spec?","sidebar":"sidebar"},"tutorial/create-entity":{"id":"tutorial/create-entity","title":"2. Creating Entities","description":"Introduction to the Entity concept","sidebar":"sidebar"},"tutorial/create-usecase":{"id":"tutorial/create-usecase","title":"4. Creating Use Cases","description":"Introduction to the Use Case concept","sidebar":"sidebar"},"tutorial/graphql":{"id":"tutorial/graphql","title":"5. Generating GraphQL Endpoint","description":"GraphQL is a query language for your API, and a server-side runtime for executing queries using a type system you define for your data.","sidebar":"sidebar"},"tutorial/herbsshelf":{"id":"tutorial/herbsshelf","title":"6. Generating Herbs Shelf","description":"Introduction to Herbs Shelf","sidebar":"sidebar"},"tutorial/new-project":{"id":"tutorial/new-project","title":"1. Creating a New Herbs Project","description":"Introduction to Herbs","sidebar":"sidebar"},"tutorial/refactoring":{"id":"tutorial/refactoring","title":"7. Refactoring","description":"Adding a Field","sidebar":"sidebar"},"tutorial/repository":{"id":"tutorial/repository","title":"3. Generating Repositories","description":"Database Config Files","sidebar":"sidebar"},"tutorial/security":{"id":"tutorial/security","title":"8. Security and Auditing","description":"Authorizing","sidebar":"sidebar"},"usecase/features":{"id":"usecase/features","title":"Usecase Features","description":"Creating a Use Case","sidebar":"sidebar"},"usecase/gettingStarted":{"id":"usecase/gettingStarted","title":"Getting Started with Use Cases","description":"What\'s a Use Case?","sidebar":"sidebar"},"usecase/result":{"id":"usecase/result","title":"Result","description":"The result instances indicate whether the execution of a function was successful or not. Ok(value) representing success and containing a value, and Err(error), representing error and containing an error value.","sidebar":"sidebar"},"usecase/steps":{"id":"usecase/steps","title":"Steps","description":"Steps are the building blocks of a use case. Their main goal is to generate metadata before and during the execution of a use case like the code intention, audit trail, etc.","sidebar":"sidebar"},"validation/checkers":{"id":"validation/checkers","title":"Checkers","description":"Checkers allow users to validate data with simple functions","sidebar":"sidebar"},"validation/validations":{"id":"validation/validations","title":"Validations","description":"Presence","sidebar":"sidebar"},"validation/what-suma":{"id":"validation/what-suma","title":"Getting Started with Validation","description":"Herbs comes with a library to help validate single single value which is extensible, test covered and errors code only.","sidebar":"sidebar"}}}')}}]);