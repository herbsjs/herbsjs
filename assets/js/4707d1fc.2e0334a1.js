"use strict";(self.webpackChunkherbjs_website=self.webpackChunkherbjs_website||[]).push([[9370],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return g}});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),p=c(n),g=a,v=p["".concat(s,".").concat(g)]||p[g]||d[g]||i;return n?r.createElement(v,o(o({ref:t},u),{},{components:n})):r.createElement(v,o({ref:t},u))}));function g(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=p;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var c=2;c<i;c++)o[c]=n[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},93838:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return s},default:function(){return g},frontMatter:function(){return l},metadata:function(){return c},toc:function(){return d}});var r=n(87462),a=n(63366),i=(n(67294),n(3905)),o=["components"],l={id:"what-suma",title:"Getting Started with Validation",sidebar_label:"Getting Started",slug:"/validation/getting-started"},s=void 0,c={unversionedId:"validation/what-suma",id:"validation/what-suma",title:"Getting Started with Validation",description:"Herbs comes with a library to help validate single single value which is extensible, test covered and errors code only.",source:"@site/docs/validation/getting-started.md",sourceDirName:"validation",slug:"/validation/getting-started",permalink:"/docs/validation/getting-started",editUrl:"https://github.com/herbsjs/herbsjs.github.io/blob/master/docs/validation/getting-started.md",tags:[],version:"current",frontMatter:{id:"what-suma",title:"Getting Started with Validation",sidebar_label:"Getting Started",slug:"/validation/getting-started"},sidebar:"sidebar",previous:{title:"Getting Started",permalink:"/docs/herbarium/working-with-herbarium"},next:{title:"Validations",permalink:"/docs/validation/validations"}},u={},d=[{value:"Installing",id:"installing",level:3},{value:"Using",id:"using",level:3}],p={toc:d};function g(e){var t=e.components,n=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Herbs comes with a library to help validate single single value which is extensible, test covered and errors code only. "),(0,i.kt)("p",null,"It's internally used to validate entities fields and use cases requests, but can be used to validate values within your domain."),(0,i.kt)("p",null,"This is not intended to validate schema or objects, just single values. For schema validation, please check ",(0,i.kt)("a",{parentName:"p",href:"/docs/entity/getting-started"},"entities"),"."),(0,i.kt)("h3",{id:"installing"},"Installing"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"$ npm install @herbsjs/herbs\n")),(0,i.kt)("h3",{id:"using"},"Using"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},"const { validate } = require('@herbsjs/herbs')\n\nconst value = null\nconst validations = { presence: true }\nconst result = validate(value, validations)\n/* {\n    value: null,\n    errors: [{ cantBeEmpty: true }]\n} */\n")))}g.isMDXComponent=!0}}]);