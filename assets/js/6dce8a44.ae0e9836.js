"use strict";(self.webpackChunkherbjs_website=self.webpackChunkherbjs_website||[]).push([[1626],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>m});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function s(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?s(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):s(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},s=Object.keys(e);for(n=0;n<s.length;n++)r=s[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)r=s[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var o=n.createContext({}),u=function(e){var t=n.useContext(o),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},p=function(e){var t=u(e.components);return n.createElement(o.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},c=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,s=e.originalType,o=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),c=u(r),m=a,h=c["".concat(o,".").concat(m)]||c[m]||d[m]||s;return r?n.createElement(h,l(l({ref:t},p),{},{components:r})):n.createElement(h,l({ref:t},p))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var s=r.length,l=new Array(s);l[0]=c;var i={};for(var o in t)hasOwnProperty.call(t,o)&&(i[o]=t[o]);i.originalType=e,i.mdxType="string"==typeof e?e:a,l[1]=i;for(var u=2;u<s;u++)l[u]=r[u];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}c.displayName="MDXCreateElement"},3586:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>o,contentTitle:()=>l,default:()=>d,frontMatter:()=>s,metadata:()=>i,toc:()=>u});var n=r(87462),a=(r(67294),r(3905));const s={id:"herbs2rest",title:"REST - Herbs2REST",sidebar_label:"REST",slug:"/glues/herbs2rest"},l=void 0,i={unversionedId:"glues/herbs2rest",id:"glues/herbs2rest",title:"REST - Herbs2REST",description:"Creates REST endpoints based on Herbs entities and use cases.",source:"@site/docs/glues/herbs2rest.md",sourceDirName:"glues",slug:"/glues/herbs2rest",permalink:"/docs/glues/herbs2rest",draft:!1,editUrl:"https://github.com/herbsjs/herbsjs.github.io/blob/master/docs/glues/herbs2rest.md",tags:[],version:"current",frontMatter:{id:"herbs2rest",title:"REST - Herbs2REST",sidebar_label:"REST",slug:"/glues/herbs2rest"},sidebar:"sidebar",previous:{title:"GraphQL",permalink:"/docs/glues/herbs2gql"},next:{title:"Knex",permalink:"/docs/glues/Herbs2knex"}},o={},u=[{value:"Getting started",id:"getting-started",level:2},{value:"Installing",id:"installing",level:3},{value:"Using",id:"using",level:3},{value:"Controller List",id:"controller-list",level:4},{value:"Custom Controller",id:"custom-controller",level:4},{value:"Generate Routes",id:"generate-routes",level:4},{value:"HTTP Status Code and Err",id:"http-status-code-and-err",level:4},{value:"Authorization",id:"authorization",level:4},{value:"Example",id:"example",level:4}],p={toc:u};function d(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Creates REST endpoints based on Herbs ",(0,a.kt)("a",{parentName:"p",href:"/docs/entity/getting-started"},"entities")," and ",(0,a.kt)("a",{parentName:"p",href:"/docs/usecase/getting-started"},"use cases"),"."),(0,a.kt)("h2",{id:"getting-started"},"Getting started"),(0,a.kt)("h3",{id:"installing"},"Installing"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"$ npm install @herbsjs/herbs2rest\n")),(0,a.kt)("h3",{id:"using"},"Using"),(0,a.kt)("p",null,"Use the method generateRoutes to generate api rest routes based on usecases."),(0,a.kt)("p",null,"Herbs2REST works with ",(0,a.kt)("a",{parentName:"p",href:"https://expressjs.com/"},"express")," in version ",(0,a.kt)("a",{parentName:"p",href:"https://expressjs.com/en/4x/api.html"},"4.x"),"."),(0,a.kt)("h4",{id:"controller-list"},"Controller List"),(0,a.kt)("p",null,"The method needs a list of controllers like the example below:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"const controllerList = [\n  {\n    name: 'lists',\n    entity: require('../entities/user')\n    getAll: { usecase: require('../usecases/getLists'), controller: require('../controller') },\n    getById: { usecase: require('../usecases/getLists'), id: 'listId' },\n    post: { usecase: require('../usecases/createList') },\n    put: { usecase: require('../usecases/updateList') },\n    delete: { usecase: require('../usecases/deleteList') }\n  }\n]\n")),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"name")," field is the name of the route (Ex. ",(0,a.kt)("em",{parentName:"p"},(0,a.kt)("a",{parentName:"em",href:"https://example.com/lists"},"https://example.com/lists")),")"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"field"),(0,a.kt)("th",{parentName:"tr",align:null},"controller"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"getAll")),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"GET /{name}/"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"getById")),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"GET /{name}/{id}"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"post")),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"POST /{name}/"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"put")),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"PUT /{name}/{id}"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"delete")),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"DELETE /{name}/{id}"))))),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"id")," field is a string representing the id field in the use case request and can be used for ",(0,a.kt)("inlineCode",{parentName:"p"},"GetById"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"Put")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"Delete"),". If an entity is informed, its ",(0,a.kt)("strong",{parentName:"p"},"ID")," field will be used as a reference for the endpoint. If neither an entity nor a string is informed, the default id field will be ",(0,a.kt)("em",{parentName:"p"},"id"),"."),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"controller")," field a function that replaces the default controller."),(0,a.kt)("h4",{id:"custom-controller"},"Custom Controller"),(0,a.kt)("p",null,"To create a custom controller, it is necessary to follow this pattern."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"const controller = async (usecase, req, user, res, next) => {\n  // Implementation\n}\n")),(0,a.kt)("p",null,"Each method parameter has different data:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"usecase: usecase in (",(0,a.kt)("a",{parentName:"li",href:"https://github.com/herbsjs/buchu"},"buchu"),") pattern."),(0,a.kt)("li",{parentName:"ul"},"req: body, query and params of route."),(0,a.kt)("li",{parentName:"ul"},"user: parameter passed in the request."),(0,a.kt)("li",{parentName:"ul"},"res: response object of ",(0,a.kt)("a",{parentName:"li",href:"https://expressjs.com/"},"express"),"."),(0,a.kt)("li",{parentName:"ul"},"next: allows the next queued route handler/middleware to handle the request.")),(0,a.kt)("h4",{id:"generate-routes"},"Generate Routes"),(0,a.kt)("p",null,"Generating and using new express routes:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"const express = require('express')\nconst { generateRoutes } = require('@herbsjs/herbs2rest')\n\nconst app = express()\nconst routes = new express.Router()\n\ngenerateRoutes(controllerList, routes, true)  // true = console info endpoints\n\napp.use(routes)\n")),(0,a.kt)("h4",{id:"http-status-code-and-err"},"HTTP Status Code and Err"),(0,a.kt)("p",null,"Herbs2rest translates Herbs ",(0,a.kt)("a",{parentName:"p",href:"/docs/usecase/result#known-errors"},"Known Errors\u200b")," to HTTP status code as described in the documentation."),(0,a.kt)("h4",{id:"authorization"},"Authorization"),(0,a.kt)("p",null,"All use cases must implement the ",(0,a.kt)("inlineCode",{parentName:"p"},"authorize")," method and receive a user for authentication if using the default controller."),(0,a.kt)("p",null,"Example:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"const { Ok, Err, usecase } = require('@herbsjs/herbs')\n\nconst testUseCase = (injection) =>\n  usecase('Test UseCase', {\n    authorize: async (user) => {\n      if (user === 'admin')\n        return Ok()\n      else\n        return Err('Invalid user')\n    }\n  })\n")),(0,a.kt)("hr",null),(0,a.kt)("h4",{id:"example"},"Example"),(0,a.kt)("p",null,"Additionally you can view a simple demo application of this library in ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/herbsjs/todolist-on-herbs"},"todolist-on-herbs"),"."))}d.isMDXComponent=!0}}]);